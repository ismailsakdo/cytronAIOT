
#define c3 131      //  white key C3
#define cd3 139      //  black key C3/D3
#define d3 147    //  white key D3
#define de3 156    //  black key D3/E3
#define e3 165    //  white key E3
#define f3 175    //  white key F3
#define fg3 185    //  black key F3/G3
#define g3 196      //  white key G4
#define ga3 208    //  black key G3/A3
#define a3 220      //  white key A3
#define ab3 233      //  black key A3/B3
#define b3 247    //  white key B3
#define c4 262    //  white key C4
#define cd4 277      //  black key C4/D4
#define d4 294    //  white key D4
#define de4 311      //  black key D4/E4
#define e4 330    //  white key E4
#define f4 350    //  white key F4
#define fg4 369      //  black key F4/G4
#define g4 392    //  white key G4
#define ga4 415      //  black key G4/A4
#define a4 440      //  white key A4
#define ab4 466      //  black key A4/B4
#define b4 494    //  white key B4
#define c5 524    //  white key C5
#define cd5 554      //  black key C5/D5
#define d5 588    //  white key D5
#define de5 622      //  black key D5/E5
#define e5 659    //  white key E5
#define f5 698    //  white key F5
#define fg5 739      //  black key F5/G5
#define g5 784    //  white key G5
#define ga5 831    //  black key G5/A5
#define a5 880      //  white key A5
#define ab5 932    //  black key A5/B5
#define b5 988    //  white key B5
#define c6 1047   //  white key C6
#define cd6 1109   //  black key C6/D6
#define d6 1175   //  white key D6
#define de6 1245   //  black key D6/E6
#define e6 1319   //  white key E6
#define f6 1397   //  white key F6
#define fg6 1480     //  black key F6/G6
#define g6 1568   //  white key G6
#define ga6 1661   //  black key G6/A6
#define a6 1760     //  white key A6
#define ab6 1865   //  black key A6/B6
#define b6 1976   //  white key B6


const int notes[]  PROGMEM = {
   g5,g5,g5,b5,e6,e6,e6,d6,b5,b5,b5,b5,fg5,fg5,fg5,e5,
   g5,g5,e5,g5,e5,g5,a5,b5, g5,g5,d5,b5, g5,g5,g5,fg5, fg5,fg5,e5,g5,
   g5,g5,e5,g5,e5,g5,a5,b5, g5,g5,d6,b5, g5,g5,a5, b5,b5,b5,
   g5,g5,g5,b5,e6,e6,e6, b5,b5,b5, b5,b5,b5,b5, fg5,fg5,fg5, b5,b5,b5,g5,
   g5,a5,a5,a5,b5,a5,g5,g5, b5,b5,b5,b5, g5,g5,g5,g5,a5,fg5,fg5,fg5,g5, b5,b5,b5,b5, 
   g5,e5,d5, g5,d6,d6,b5, g5,d6,d6,b5, a5, b5,b5,b5,b5, 
   g5,g5,e5,c6, d6,b5,d6,b5,d6,b5,d6,b5,a5,c6, e5,c6,b5, 
   
   g5,g5,g5,g5,b5,b5,g6,fg6,e6,e6,e6, e5,c6,b5, b5,b5,b5,b5,d6,c6,b5,g5,fg5,fg5,fg5, e5,c6,b5, 
   g5,g5,g5,g5,b5,b5,g6,fg6,e6,e6,e6, e5,c6,d6, b5,b5,b5,b5,d6,c6,b5,g5,fg5,fg5,fg5, e5,c6,b5,  
   
   g5,g5,g5,g5,e5,g5,a5,b5, g5,g5,d5,b5, g5,g5,g5,fg5, fg5,fg5,e5,g5, 
   g5,g5,a5,g5,e5,g5,a5,b5, g5,d6,b5, g5,g5,a5, b5,b5,b5,b5, b5,b5,b5,b5, 
   g5,d6,d6,b5,g5,d6,b5,g5,d6,d6,a5,g5,g5,b5, g5,d6,d6,a5, g5,d6,d6,a5, 
   g5,g5,a5,g5,g5,d6,g5,a5,g5,g5, g5,g5,a5,g5,g5,d6,g5,a5,g5,g5, 
   g5,g5,a5,g5,g5,d6,g5,a5,g5,g5, g5,g5,a5,g5,g5,d6,g5,a5,g5,g5, b5,b5,b5,b5,
   g5,e5,d5, g5,d6,d6,b5, g5,d6,d6,b5, a5, b5,b5,b5,b5, 
   g5,g5,e5,c6, d6,b5,d6,b5,d6,b5,d6,b5,a5,c6, e5,c6,b5, 
   
   g5,g5,g5,g5,b5,b5,g6,fg6,e6,e6,e6, e5,c6,b5, b5,b5,b5,b5,d6,c6,b5,g5,fg5,fg5,fg5, e5,c6,b5, 
   g5,g5,g5,g5,b5,b5,g6,fg6,e6,e6,e6, e5,c6,d6, b5,b5,b5,b5,d6,c6,b5,g5,fg5,fg5,fg5, e5,c6,b5,  
   
   g5,g5,g5,b5,e6,e6,e6,d6,b5,b5,b5,b5,fg5, 
};
const int duration[]  PROGMEM = {
   450,450,450,450,450,450,450,450,450,450,450,450,450,450,450,450,
   233,233,233,233,233,233,233,250, 233,233,233,250, 233,233,233,250, 233,233,233,250,
   233,233,233,233,233,233,233,250, 233,233,233,250, 233,233,250, 233,233,233,
   450,450,450,450,450,450,233, 233,233,233, 450,450,450,450, 450,450,233, 233,233,233,250,
   100,100,233,100,100,233,233,250, 233,233,233,250, 100,100,233,100,100,233,233,233,250, 233,233,233,250,
   233,233,250, 233,233,100,250, 233,233,100,250, 250, 233,233,233,250, 
   250,100,233,250, 233,233,233,233,233,233,233,233,100,250, 233,450,450, 
   
   233,233,233,233,233,233,233,233,233,233,233, 233,450,450, 233,233,233,233,233,233,233,233,233,233,233, 233,450,450, 
   233,233,233,233,233,233,233,233,233,233,233, 233,450,450, 233,233,233,233,233,233,233,233,233,233,233, 233,450,450, 
   
   233,233,233,233,233,233,233,250, 233,233,233,250, 233,233,233,250, 233,233,233,250, 
   233,233,233,233,233,233,233,250, 233,250,250, 233,233,250, 233,233,233,250, 233,233,233,250, 
   233,233,100,250,233,250,250,233,233,100,250,233,233,250, 223,223,100,250, 223,223,100,250,
   100,233,100,233,100,250,100,100,233,233, 100,233,100,233,100,250,100,100,233,233, 
   100,233,100,233,100,250,100,100,233,233, 100,233,100,233,100,250,100,100,233,250, 233,233,233,250,
   233,233,250, 233,233,100,250, 233,233,100,250, 250, 233,233,233,250, 
   250,100,233,250, 233,233,233,233,233,233,233,233,100,250, 233,450,450, 
   
   233,233,233,233,233,233,233,233,233,233,233, 233,450,450, 233,233,233,233,233,233,233,233,233,233,233, 233,450,450, 
   233,233,233,233,233,233,233,233,233,233,233, 233,450,450, 233,233,233,233,233,233,233,233,233,233,233, 233,450,450, 
   
   450,450,450,450,450,450,450,450,450,450,450,450,450,
};
const int duration1[]  PROGMEM = {
   216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,550,
   100,100,100,100,100,100,100,416, 100,100,100,2416, 100,100,100,749, 100,100,100,749,
   100,100,100,100,100,100,100,435, 100,100,100,2416, 100,100,1749, 100,100,100,
   216,216,216,216,216,216,100, 100,100,100, 216,216,216,216, 216,216,100, 100,100,100,1416,
   66,66,100,66,66,100,100,766, 75,75,75,1450, 66,66,100,60,60,100,100,100,1749, 100,100,100,2083, 
   100,100,1083, 100,66,100,1583, 100,66,100,916, 416, 100,100,100,1083, 
   250,66,100,2416, 100,100,100,100,100,100,100,100,66,916, 100,216,216, 
   
   100,100,100,100,100,100,100,100,100,100,100, 100,216,216, 100,100,100,100,100,100,100,100,100,100,100, 100,216,216,
   100,100,100,100,100,100,100,100,100,100,100, 100,216,216, 100,100,100,100,100,100,100,100,100,100,100, 100,216,550,
   
   100,100,100,100,100,100,100,416, 100,100,100,2416, 100,100,100,749, 100,100,100,749, 
   100,100,100,100,100,100,100,749, 100,250,2250, 100,100,1749, 100,100,100,4083, 100,100,100,4083, 
   100,100,66,250,100,250,250,100,100,66,250,100,100,417, 100,100,66,1583, 100,100,66,2583,
   66,100,66,100,66,250,66,66,100,100, 66,100,66,100,66,250,66,66,100,100, 
   66,100,66,100,66,250,66,66,100,100, 66,100,66,100,66,250,66,66,100,416, 100,100,100,2083, 
   100,100,1083, 100,66,100,1583, 100,66,100,916, 416, 100,100,100,1083, 
   250,66,100,2416, 100,100,100,100,100,100,100,100,66,916, 100,216,216, 
   
   100,100,100,100,100,100,100,100,100,100,100, 100,216,216, 100,100,100,100,100,100,100,100,100,100,100, 100,216,216,
   100,100,100,100,100,100,100,100,100,100,100, 100,216,216, 100,100,100,100,100,100,100,100,100,100,100, 100,216,216,
   
   216,216,216,216,216,216,216,216,216,216,216,216,1000, 
};
int buzzer = 12, i, j=1, f=0;
int pin1 = 3;
int s = sizeof(notes)/sizeof(int);
int s1 =sizeof(duration)/sizeof(int);
int s2 =sizeof(duration1)/sizeof(int);

void setup(){
  Serial.begin(9600);
  pinMode(buzzer, OUTPUT);
  pinMode(pin1, OUTPUT);
  f = 1;
}
void loop(){
  if(f==1){
    digitalWrite(pin1, 1);
    delay(1);
    digitalWrite(pin1, 0);
    f = 0;
  }
  while(j<=1){
   for(i=0;i<s;i++){
//   for(i=0;i<sizeof(notes)/sizeof(int);i++){
//   Serial.println(pgm_read_word(&notes[i]));
    tone(buzzer, pgm_read_word(&notes[i]));
    delay(pgm_read_word(&duration[i]));
    noTone(buzzer);
    delay(pgm_read_word(&duration1[i]));
   }j++;   // Serial.print(s);Serial.print("   ");Serial.print(s1);Serial.print("   ");Serial.println(s2);

  }

}
